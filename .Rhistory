imputed_mean = replace(imp$Base, is.na(imp$Base), mean(imp$Base, na.rm = TRUE)),
imputed_median = replace(imp$Base, is.na(imp$Base), median(imp$Base, na.rm = TRUE))
)
h1 <- ggplot(value_imputed, aes(x = original)) +
geom_histogram(fill = "#ad1538", color = "#000000", position = "identity") +
ggtitle("Original distribution") +
theme_classic()
h2 <- ggplot(value_imputed, aes(x = imputed_zero)) +
geom_histogram(fill = "#15ad4f", color = "#000000", position = "identity") +
ggtitle("Constant-imputed distribution") +
theme_classic()
h3 <- ggplot(value_imputed, aes(x = imputed_mean)) +
geom_histogram(fill = "#1543ad", color = "#000000", position = "identity") +
ggtitle("Mean-imputed distribution") +
theme_classic()
h4 <- ggplot(value_imputed, aes(x = imputed_median)) +
geom_histogram(fill = "#ad8415", color = "#000000", position = "identity") +
ggtitle("Median-imputed distribution") +
theme_classic()
plot_grid(h1, h2, h3, h4, nrow = 2, ncol = 2)
knitr::opts_chunk$set(echo = FALSE, warning=FALSE, message = FALSE)
library(tidyverse)
library(knitr)
library(bookdown)
library(tidytext)
library(kableExtra)
library(cowplot)
library(mice)
# constant of 8 was from eyeballing histogram
value_imputed <- data.frame(
original = imp$Base,
imputed_zero = replace(imp$Base, is.na(imp$Base), 125000),  # picked a plausible value
imputed_mean = replace(imp$Base, is.na(imp$Base), mean(imp$Base, na.rm = TRUE)),
imputed_median = replace(imp$Base, is.na(imp$Base), median(imp$Base, na.rm = TRUE))
)
h1 <- ggplot(value_imputed, aes(x = original)) +
geom_histogram(fill = "#ad1538", color = "#000000", position = "identity") +
ggtitle("Original distribution") +
theme_classic()
h2 <- ggplot(value_imputed, aes(x = imputed_zero)) +
geom_histogram(fill = "#15ad4f", color = "#000000", position = "identity") +
ggtitle("Constant-imputed distribution") +
theme_classic()
h3 <- ggplot(value_imputed, aes(x = imputed_mean)) +
geom_histogram(fill = "#1543ad", color = "#000000", position = "identity") +
ggtitle("Mean-imputed distribution") +
theme_classic()
h4 <- ggplot(value_imputed, aes(x = imputed_median)) +
geom_histogram(fill = "#ad8415", color = "#000000", position = "identity") +
ggtitle("Median-imputed distribution") +
theme_classic()
plot_grid(h1, h2, h3, h4, nrow = 2, ncol = 2)
mice_imputed <- data.frame(
original = imp$Base,
imputed_pmm = complete(mice(imp, method = "pmm"))$Base,
imputed_cart = complete(mice(imp, method = "cart"))$Base,
imputed_lasso = complete(mice(imp, method = "lasso.norm"))$Base
)
ImputedValues <- subset(mice_imputed, is.na(original))
h1 <- ggplot(mice_imputed, aes(x = original)) +
geom_histogram(fill = "#ad1538", color = "#000000", position = "identity") +
ggtitle("Original distribution") +
theme_classic()
h2 <- ggplot(mice_imputed, aes(x = imputed_pmm)) +
geom_histogram(fill = "#ad8415", color = "#000000", position = "identity") +
ggtitle("Imputed by PMM") +
theme_classic()
h3 <- ggplot(mice_imputed, aes(x = imputed_cart)) +
geom_histogram(fill = "#15ad4f", color = "#000000", position = "identity") +
ggtitle("Imputed by CART") +
theme_classic()
h4 <- ggplot(mice_imputed, aes(x = imputed_lasso)) +
geom_histogram(fill = "#1543ad", color = "#000000", position = "identity") +
ggtitle("Imputed by Lasso") +
theme_classic()
plot_grid(h1, h2, h3, h4, nrow = 2, ncol = 2)
library(missForest)
impNoNAs <- imp[  , 1:4] # removed Bonus and Total because they have NAs
impNoNAs <- impNoNAs[-c(116, 134), ] # missing values in Reports
impNoNAs <- impNoNAs[-18, ] # missing value in Reports
# writexl::write_xlsx(impNoNAs, "C:/Users/rees/Documents/R/Projects/LAWYER Hornbooks/5Surveys/SavSurvBlog/imputationdf.xlsx")  # changed some variable names
impNoNAs$YearsRole <- as.numeric(impNoNAs$YearsRole)
impNoNAs$Reports <- as.numeric(impNoNAs$Reports)
impNoNAs$Lawyers <- as.numeric(impNoNAs$Lawyers)
impNoNAs$Base <- as.numeric(impNoNAs$Base)
# summary(impNoNAs$Lawyers)
missForest_imputed <- data.frame(
original = impNoNAs$Base,
imputed_missForest = missForest(impNoNAs)$ximp$Base
)
install.packages("missForest", dependencies = TRUE)
install.packages("missForest", dependencies = TRUE)
library(missForest)
impNoNAs <- imp[  , 1:4] # removed Bonus and Total because they have NAs
impNoNAs <- impNoNAs[-c(116, 134), ] # missing values in Reports
impNoNAs <- impNoNAs[-18, ] # missing value in Reports
# writexl::write_xlsx(impNoNAs, "C:/Users/rees/Documents/R/Projects/LAWYER Hornbooks/5Surveys/SavSurvBlog/imputationdf.xlsx")  # changed some variable names
impNoNAs$YearsRole <- as.numeric(impNoNAs$YearsRole)
impNoNAs$Reports <- as.numeric(impNoNAs$Reports)
impNoNAs$Lawyers <- as.numeric(impNoNAs$Lawyers)
impNoNAs$Base <- as.numeric(impNoNAs$Base)
# summary(impNoNAs$Lawyers)
missForest_imputed <- data.frame(
original = impNoNAs$Base,
imputed_missForest = missForest(impNoNAs)$ximp$Base
)
impFor <- missForest(impNoNAs)
View(imp)
summary(impNoNAs)
View(impNoNAs)
imp <- readxl::read_xlsx("C:/Users/rees/Documents/R/Projects/CLIENTS/LFExecDirs/combo121.xlsx")
#keep only numerics and a few of them
imp <- imp[    , c("YearsRole", "Reports", "Lawyers", "Base", "Bonus", "Total")]  # 225 obs
imp$Base[61] <- NA
imp$Base[124] <- 114000
imp$Bonus[124] <- 12000
imp$Total[124] <- 126000
imp$Bonus[142] <- 10000
impNoNAs <- imp[  , 1:4] # removed Bonus and Total because they have NAs
impNoNAs <- impNoNAs[-c(116, 134), ] # missing values in Reports
impNoNAs <- impNoNAs[-18, ] # missing value in Reports
summary(impNoNAs)
# summary(impNoNAs)
str(impNonNAs)
# summary(impNoNAs)
str(impNoNAs)
impFor <- missForest(impNoNAs)
colnames(impNoNAs) <- c("Years", "Staff", "JDs", "Total")
dput(impNoNAs)
impFor <- missForest(impNoNAs)
df <- data.frame(Title = c("COO", "Exec. Dir.", "Firm Administrator"),
Incumbents = c(40, 20, 10))
df2 <- data.frame(Title = c(rep(1, 40), rep(2, 20), rep(3, 10)),
Incumbents = c(rep("COO", 40), rep("Exec. Dir.", 20), rep("Firm Admin'or", 10)))
df <- data.frame(Title = c("COO", "Exec. Dir.", "Firm Administrator"),
Incumbents = c(40, 20, 10))
df2 <- data.frame(Title = c(rep(1, 40), rep(2, 20), rep(3, 10)),
Incumbents = c(rep("COO", 40), rep("Exec. Dir.", 20), rep("Firm Admin'or", 10)))
# bar
p1 <- ggplot(df, aes(x = Title, y = Incumbents)) +
geom_bar(fill = "#ad1538", color = "#000000", stat = "identity") +
ggtitle("Column Plot") +
theme_classic()
knitr::opts_chunk$set(echo = FALSE, warning=FALSE, message = FALSE)
library(tidyverse)
library(knitr)
library(bookdown)
library(tidytext)
library(kableExtra)
library(cowplot)
df <- data.frame(Title = c("COO", "Exec. Dir.", "Firm Administrator"),
Incumbents = c(40, 20, 10))
df2 <- data.frame(Title = c(rep(1, 40), rep(2, 20), rep(3, 10)),
Incumbents = c(rep("COO", 40), rep("Exec. Dir.", 20), rep("Firm Admin'or", 10)))
# bar
p1 <- ggplot(df, aes(x = Title, y = Incumbents)) +
geom_bar(fill = "#ad1538", color = "#000000", stat = "identity") +
ggtitle("Column Plot") +
theme_classic()
# pie; windrows, coxcomb
p2 <- ggplot(df, aes(x = Title, y = Incumbents, )) +
geom_bar(color = "#ad1538", stat = "identity") +
coord_polar(theta = "x") +
ggtitle("Pie/Polar Plot") +
theme_classic()
# scatter
p3 <- ggplot(df2, aes(x = Incumbents, y = Title, fill = Title)) +
geom_jitter(pch = 20, size = 6) +
ggtitle("Scatter Plot") +
theme_classic() +
theme(legend.position = "none")
# parliament  https://r-charts.com/part-whole/ggparliament/
library(ggparliament) # from clients/Old Client Directories/ChildLA/covid19/covidBook.Rmd
geo_semicircle <- parliament_data(election_data = df,
type = "semicircle", # Parliament type
parl_rows = 3,
party_seats = df$Incumbents)
p4 <- ggplot(geo_semicircle, aes(x = x, y = y, colour = Title)) +
geom_parliament_seats() +
labs(colour = NULL, title = "Parliament Plot of Titles") +
theme_ggparliament()
# scale_colour_colorblind()
# stacked (segment?)
df2$Type <- rep("Type", 70)
p5 <- ggplot(df2, aes(x = Type, y = Incumbents, fill = Title)) +
geom_bar(stat = "identity", position = "stack") +
labs(x = NULL, y = "Incumbents", title = "Stacked Bar Plot") +
theme_classic() +
guides(fill = FALSE) +
coord_flip()
# line
p6 <- ggplot(df, aes(x = Title, y = Incumbents, fill = Title)) +
geom_line(stat = "count", position = "stack") +
ggtitle("Line Plot") +
theme_classic() +
coord_flip()
# lollipop
p7 <- ggplot(df, aes(y = Incumbents, fill = Title)) +
geom_bar(stat = "count", position = "stack") +
ggtitle("Lollipop Plot") +
theme_classic() +
coord_flip()
# segment  see example on ACC page 38
p8 <- ggplot(df, aes(x = Incumbents, color = Title)) +
geom_segment(stat = "identity", aes(x = 0, xend = df$Incumbents[1], y = 5, yend = 5),
linetype = "solid", linewidth = 8, lineend = "round")
ggplot(df, aes(x = Incumbents, color = Title)) +
geom_segment(stat = "identity",
aes(x = c(0, 40, 60),
xend = c(Incumbents[1], Incumbents[2] + Incumbents[1], Incumbents[3] + Incumbents[2] + Incumbents[3]),
y = 5, yend = 5),
linetype = "solid", linewidth = 8, lineend = "round")
# dotplot
p9 <- ggplot(df) +
geom_dotplot(method = "histodot", aes(x = df$Incumbent, fill = df$Title), position = position_jitter(height = 0.1, width = 0.1), size = 1, binwidth = 1) +
labs(x = "Titles", y = "Incumbents", title = "Count of Titles") +
theme_classic() +
# scale_fill_manual(values = colorRampPalette(brewer.pal(12, "Accent"))(colourCount)) +
scale_y_continuous(breaks = NULL) +
theme(axis.title.y =  element_blank()) +
theme(legend.position = "bottom") +
guides(fill=guide_legend(nrow=2)) +
theme(legend.title=element_blank())
# bubble plot by area, like the ACC CLO chart on page 27
cowplot::plot_grid(p1, p2, p3, p4, p5, p6, p7, p8, p9,
labels = c('', '', '', '', '', '', '', '', ''),
nrow = 3)
ggplot(df, aes(x = Incumbents, fill = Title)) +
geom_line(stat = "count", position = "stack") +
ggtitle("Line Plot") +
theme_classic() +
coord_flip()
ggplot(df, aes(x = Incumbents, fill = Title)) +
geom_line(stat = "count", group = df$Title) +
ggtitle("Line Plot") +
theme_classic() +
coord_flip()
ggplot(df, aes(x = Title, y = Incumbents, group = 1)) +
geom_line() +
ggtitle("Line Plot") +
theme_classic()
# stacked (segment?)
df2$Type <- rep("Type", 70)
p5 <- ggplot(df2, aes(x = Type, y = Incumbents, fill = Title)) +
geom_bar(stat = "identity", position = "stack") +
labs(x = NULL, y = "Incumbents", title = "Stacked Bar Plot") +
theme_classic() +
guides(fill = FALSE) +
coord_flip()
# line
p6 <- ggplot(df, aes(x = Title, y = Incumbents, group = 1)) +
geom_line() +
ggtitle("Line Plot") +
theme_classic()
# lollipop
p7 <- ggplot(df, aes(y = Incumbents, fill = Title)) +
geom_bar(stat = "count", position = "stack") +
ggtitle("Lollipop Plot") +
theme_classic() +
coord_flip()
# segment  see example on ACC page 38
p8 <- ggplot(df, aes(x = Incumbents, color = Title)) +
geom_segment(stat = "identity", aes(x = 0, xend = df$Incumbents[1], y = 5, yend = 5),
linetype = "solid", linewidth = 8, lineend = "round")
ggplot(df, aes(x = Incumbents, color = Title)) +
geom_segment(stat = "identity",
aes(x = c(0, 40, 60),
xend = c(Incumbents[1], Incumbents[2] + Incumbents[1], Incumbents[3] + Incumbents[2] + Incumbents[3]),
y = 5, yend = 5),
linetype = "solid", linewidth = 8, lineend = "round")
# dotplot
p9 <- ggplot(df) +
geom_dotplot(method = "histodot", aes(x = df$Incumbent, fill = df$Title), position = position_jitter(height = 0.1, width = 0.1), size = 1, binwidth = 1) +
labs(x = "Titles", y = "Incumbents", title = "Count of Titles") +
theme_classic() +
# scale_fill_manual(values = colorRampPalette(brewer.pal(12, "Accent"))(colourCount)) +
scale_y_continuous(breaks = NULL) +
theme(axis.title.y =  element_blank()) +
theme(legend.position = "bottom") +
guides(fill=guide_legend(nrow=2)) +
theme(legend.title=element_blank())
# bubble plot by area, like the ACC CLO chart on page 27
cowplot::plot_grid(p1, p2, p3, p4, p5, p6, p7, p8, p9,
labels = c('', '', '', '', '', '', '', '', ''),
nrow = 3)
cowplot::plot_grid(p1, p2, p3, p4, p5, p6, p7, p8, p9,
labels = c('', '', '', '', '', '', '', '', ''),
nrow = 3)
ggplot(df2) +
geom_dotplot(method = "histodot", aes(x = Incumbents, fill = Title), position = position_jitter(height = 0.1, width = 0.1), size = 1, binwidth = 1) +
labs(x = "Titles", y = "Incumbents", title = "Count of Titles") +
theme_classic() +
# scale_fill_manual(values = colorRampPalette(brewer.pal(12, "Accent"))(colourCount)) +
scale_y_continuous(breaks = NULL) +
theme(axis.title.y =  element_blank()) +
theme(legend.position = "bottom") +
guides(fill=guide_legend(nrow=2)) +
theme(legend.title=element_blank())
ggplot(df2) +
geom_dotplot(method = "histodot", aes(x = Incumbents, fill = Title), position = position_jitter(height = 0.1, width = 0.1), size = .5, binwidth = 1) +
labs(x = "Titles", y = "Incumbents", title = "Count of Titles") +
theme_classic() +
# scale_fill_manual(values = colorRampPalette(brewer.pal(12, "Accent"))(colourCount)) +
scale_y_continuous(breaks = NULL) +
theme(axis.title.y =  element_blank()) +
theme(legend.position = "bottom") +
guides(fill=guide_legend(nrow=2)) +
theme(legend.title=element_blank())
ggplot(df2) +
geom_dotplot(method = "histodot", aes(x = Incumbents, fill = Title), position = position_jitter(height = 0.1, width = 0.1), size = 0.5, binwidth = 0.5) +
labs(x = "Titles", y = "Incumbents", title = "Count of Titles") +
theme_classic() +
# scale_fill_manual(values = colorRampPalette(brewer.pal(12, "Accent"))(colourCount)) +
scale_y_continuous(breaks = NULL) +
theme(axis.title.y =  element_blank()) +
theme(legend.position = "bottom") +
guides(fill=guide_legend(nrow=2)) +
theme(legend.title=element_blank())
ggplot(df2) +
geom_dotplot(method = "histodot", aes(x = Incumbents, fill = Title), position = position_jitter(height = 0.1, width = 0.1), size = 0.2, binwidth = 0.5) +
labs(x = "Titles", y = "Incumbents", title = "Count of Titles") +
theme_classic() +
# scale_fill_manual(values = colorRampPalette(brewer.pal(12, "Accent"))(colourCount)) +
scale_y_continuous(breaks = NULL) +
theme(axis.title.y =  element_blank()) +
theme(legend.position = "bottom") +
guides(fill=guide_legend(nrow=2)) +
theme(legend.title=element_blank())
cowplot::plot_grid(p1, p2, p3, p4, p5, p6, p7, p8, p9,
labels = c('', '', '', '', '', '', '', '', ''),
nrow = 3)
library(dbscan)
cl <- hdbscan(df3, minPts = 5)
cl <- hdbscan(df2, minPts = 5)
cl <- hdbscan(impNoNAs, minPts = 5)
cl <- hdbscan(filter(impNoNAs, Total > 1), minPts = 5)
cl
plot(filter(impNoNAs, Total > 1), col=cl$cluster+1, pch=20)
data("moons")
View(moons)
cl$cluster+1
cl <- hdbscan(filter(impNoNAs, Total > 1), minPts = 10) # removed NAs of Total
# Error in kNN(x, k = k, sort = TRUE) : x has to be a numeric matrix.
cl
plot(filter(impNoNAs, Total > 1), col=cl$cluster+1, pch=20)
cl
plot(cl$hc, main="HDBSCAN* Hierarchy")
plot(cl)
plot(cl, show_flat = TRUE)
rm(moons)
knitr::opts_chunk$set(echo = FALSE, warning=FALSE, message = FALSE)
library(tidyverse)
library(knitr)
library(bookdown)
library(tidytext)
library(kableExtra)
library(blogdown)
serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
stop_server()
serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
stop_server()
80/12
serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
serve_site()
stop_server()
serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
knitr::opts_chunk$set(echo = FALSE, warning=FALSE, message = FALSE)
library(tidyverse)  # frequently used packages that follow a similar coding approach
library(blogdown)
library(knitr)
library(funModeling) # to compare vectors against each other, such as URLs of posts
library(ggthemes) # to include the theme_tufte them in plots
library(lubridate) # to deal with date data, such as the date a post is published
library(ggrepel) # to spread points or text so that they do not overlap on a plot
library(readxl) # to read in the underlying Excel data
library(tidytext) # text-mining functions that help analyse the content of posts
library(writexl)
library(kableExtra)
serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
knitr::opts_chunk$set(echo = FALSE, warning=FALSE, message = FALSE)
library(tidyverse)
library(knitr)
library(bookdown)
library(tidytext)
library(kableExtra)
library(cowplot)
md.pattern(impNoNAs, rotate.names = TRUE)
library(mice)
md.pattern(impNoNAs, rotate.names = TRUE)
value_imputed <- data.frame(
original = imp$Total,
imputed_zero = replace(imp$Total, is.na(imp$Total), 200000),  # plausible value
imputed_mean = replace(imp$Total, is.na(imp$Total), mean(imp$Total, na.rm = TRUE)),
imputed_median = replace(imp$Total, is.na(imp$Total), median(imp$Total, na.rm = TRUE))
)
h1 <- ggplot(value_imputed, aes(x = original)) +
geom_histogram(fill = "#ad1538", color = "#000000", position = "identity") +
ggtitle("Original distribution") +
theme_classic()
h2 <- ggplot(value_imputed, aes(x = imputed_zero)) +
geom_histogram(fill = "#15ad4f", color = "#000000", position = "identity") +
ggtitle("Constant-imputed distribution") +
theme_classic()
h3 <- ggplot(value_imputed, aes(x = imputed_mean)) +
geom_histogram(fill = "#1543ad", color = "#000000", position = "identity") +
ggtitle("Mean-imputed distribution") +
theme_classic()
h4 <- ggplot(value_imputed, aes(x = imputed_median)) +
geom_histogram(fill = "#ad8415", color = "#000000", position = "identity") +
ggtitle("Median-imputed distribution") +
theme_classic()
plot_grid(h1, h2, h3, h4, nrow = 2, ncol = 2)
mice_imputed <- data.frame(
original = imp$Total,
imputed_pmm = complete(mice(imp, method = "pmm"))$Total,
imputed_cart = complete(mice(imp, method = "cart"))$Total,
imputed_lasso = complete(mice(imp, method = "lasso.norm"))$Total
)
h5 <- ggplot(mice_imputed, aes(x = original)) +
geom_histogram(fill = "#ad1538", color = "#000000", position = "identity") +
ggtitle("Original distribution") +
theme_classic()
h6 <- ggplot(mice_imputed, aes(x = imputed_pmm)) +
geom_histogram(fill = "#ad8415", color = "#000000", position = "identity") +
ggtitle("Imputed by PMM") +
theme_classic()
h7 <- ggplot(mice_imputed, aes(x = imputed_cart)) +
geom_histogram(fill = "#15ad4f", color = "#000000", position = "identity") +
ggtitle("Imputed by CART") +
theme_classic()
h8 <- ggplot(mice_imputed, aes(x = imputed_lasso)) +
geom_histogram(fill = "#1543ad", color = "#000000", position = "identity") +
ggtitle("Imputed by Lasso") +
theme_classic()
plot_grid(h5, h6, h7, h8, nrow = 2, ncol = 2)
View(mice_imputed)
mice_imputedGat <- gather(mice_imputed, key = "Method", value = "Imputed")
View(mice_imputedGat)
mice_imputedGat <- gather(filter(mice_imputed, is.na(Original)), key = "Method", value = "Imputed")
mice_imputedGat <- gather(filter(mice_imputed, is.na(mice_imputed$original)), key = "Method", value = "Imputed")
View(mice_imputedGat)
ggplot(mice_imputedGat, aes(x = Method, y = Imputed)) +
geom_col() +
ggtitle("Comparison of Values Imputed by Three MICE Methods") +
theme_classic()
help(geom_col)
ggplot(mice_imputedGat, aes(x = Method, y = Imputed)) +
geom_col(position = "stack") +
ggtitle("Comparison of Values Imputed by Three MICE Methods") +
theme_classic()
ggplot(mice_imputedGat, aes(x = Method, y = Imputed)) +
geom_col(position = "jitter") +
ggtitle("Comparison of Values Imputed by Three MICE Methods") +
theme_classic()
library(olsrr)
install.packages("olsrr")
library(olsrr)
ols_test_bartlett(impNoNAs$Years, 'read', 'write')
ols_test_bartlett(impNoNAs, 'read', 'write')
ols_test_bartlett(impNoNAs[1:2], 'read', 'write')
ols_test_bartlett(impNoNAs[  , 1:2], 'read', 'write')
knitr::opts_chunk$set(echo = FALSE, warning=FALSE, message = FALSE)
library(tidyverse)  # frequently used packages that follow a similar coding approach
library(blogdown)
library(knitr)
library(funModeling) # to compare vectors against each other, such as URLs of posts
library(ggthemes) # to include the theme_tufte them in plots
library(lubridate) # to deal with date data, such as the date a post is published
library(ggrepel) # to spread points or text so that they do not overlap on a plot
library(readxl) # to read in the underlying Excel data
library(tidytext) # text-mining functions that help analyse the content of posts
library(writexl)
library(kableExtra)
serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
stop_server()
serve_site()
knitr::opts_chunk$set(echo = FALSE, warning=FALSE, message = FALSE)
library(tidyverse)  # frequently used packages that follow a similar coding approach
library(blogdown)
library(knitr)
library(funModeling) # to compare vectors against each other, such as URLs of posts
library(ggthemes) # to include the theme_tufte them in plots
library(lubridate) # to deal with date data, such as the date a post is published
library(ggrepel) # to spread points or text so that they do not overlap on a plot
library(readxl) # to read in the underlying Excel data
library(tidytext) # text-mining functions that help analyse the content of posts
library(writexl)
library(kableExtra)
serve_site()
blogdown:::new_post_addin()
blogdown:::insert_image_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
