test2[8, 1:7], test2[8, 8:14], test2[8, 15:21],
test2[8, 22:28], test2[8, 29:35], test2[8, 36:42],
test2[8, 43:49], test2[8, 50:56], test2[8, 57:63],
test2[8, 64:70],
test2[9, 1:7], test2[9, 8:14], test2[9, 15:21],
test2[9, 22:28], test2[9, 29:35], test2[9, 36:42],
test2[9, 43:49], test2[9, 50:56], test2[9, 57:63],
test2[9, 64:70],
test2[10, 1:7], test2[10, 8:14], test2[10, 15:21],
test2[10, 22:28], test2[10, 29:35], test2[10, 36:42],
test2[10, 43:49], test2[10, 50:56], test2[10, 57:63],
test2[10, 64:70],
test2[11, 1:7], test2[11, 8:14], test2[11, 15:21],
test2[11, 22:28], test2[11, 29:35], test2[11, 36:42],
test2[11, 43:49], test2[11, 50:56], test2[11, 57:63],
test2[11, 64:70],
test2[12, 1:7], test2[12, 8:14], test2[12, 15:21],
test2[12, 22:28], test2[12, 29:35], test2[12, 36:42],
test2[12, 43:49], test2[12, 50:56], test2[12, 57:63],
test2[12, 64:70],
test2[13, 1:7], test2[13, 8:14], test2[13, 15:21],
test2[13, 22:28], test2[13, 29:35], test2[13, 36:42],
test2[13, 43:49], test2[13, 50:56], test2[13, 57:63],
test2[13, 64:70],
test2[14, 1:7], test2[14, 8:14], test2[14, 15:21],
test2[14, 22:28], test2[14, 29:35], test2[14, 36:42],
test2[14, 43:49], test2[14, 50:56], test2[14, 57:63],
test2[14, 64:70],
test2[15, 1:7], test2[15, 8:14], test2[15, 15:21],
test2[15, 22:28], test2[15, 29:35], test2[15, 36:42],
test2[15, 43:49], test2[15, 50:56], test2[15, 57:63],
test2[15, 64:70],
test2[16, 1:7], test2[16, 8:14], test2[16, 15:21],
test2[16, 22:28], test2[16, 29:35], test2[16, 36:42],
test2[16, 43:49], test2[16, 50:56], test2[16, 57:63],
test2[16, 64:70],
test2[17, 1:7], test2[17, 8:14], test2[17, 15:21],
test2[17, 22:28], test2[17, 29:35], test2[17, 36:42],
test2[17, 43:49], test2[17, 50:56], test2[17, 57:63],
test2[17, 64:70],
test2[18, 1:7], test2[18, 8:14], test2[18, 15:21],
test2[18, 22:28], test2[18, 29:35], test2[18, 36:42],
test2[18, 43:49], test2[18, 50:56], test2[18, 57:63],
test2[18, 64:70],
test2[19, 1:7], test2[19, 8:14], test2[19, 15:21],
test2[19, 22:28], test2[19, 29:35], test2[19, 36:42],
test2[19, 43:49], test2[19, 50:56], test2[19, 57:63],
test2[19, 64:70],
test2[20, 1:7], test2[20, 8:14], test2[20, 15:21],
test2[20, 22:28], test2[20, 29:35], test2[20, 36:42],
test2[20, 43:49], test2[20, 50:56], test2[20, 57:63],
test2[20, 64:70],
test2[21, 1:7], test2[21, 8:14], test2[21, 15:21],
test2[21, 22:28], test2[21, 29:35], test2[21, 36:42],
test2[21, 43:49], test2[21, 50:56], test2[21, 57:63],
test2[21, 64:70],
test2[22, 1:7], test2[22, 8:14], test2[22, 15:21],
test2[22, 22:28], test2[22, 29:35], test2[22, 36:42],
test2[22, 43:49], test2[22, 50:56], test2[22, 57:63],
test2[22, 64:70],
test2[23, 1:7], test2[23, 8:14], test2[23, 15:21],
test2[23, 22:28], test2[23, 29:35], test2[23, 36:42],
test2[23, 43:49], test2[23, 50:56], test2[23, 57:63],
test2[23, 64:70],
test2[24, 1:7], test2[24, 8:14], test2[24, 15:21],
test2[24, 22:28], test2[24, 29:35], test2[24, 36:42],
test2[24, 43:49], test2[24, 50:56], test2[24, 57:63],
test2[24, 64:70],
test2[25, 1:7], test2[25, 8:14], test2[25, 15:21],
test2[25, 22:28], test2[25, 29:35], test2[25, 36:42],
test2[25, 43:49], test2[25, 50:56], test2[25, 57:63],
test2[25, 64:70],
test2[26, 1:7], test2[26, 8:14], test2[26, 15:21],
test2[26, 22:28], test2[26, 29:35], test2[26, 36:42],
test2[26, 43:49], test2[26, 50:56], test2[26, 57:63],
test2[26, 64:70],
test2[27, 1:7], test2[27, 8:14], test2[27, 15:21],
test2[27, 22:28], test2[27, 29:35], test2[27, 36:42],
test2[27, 43:49], test2[27, 50:56], test2[27, 57:63],
test2[27, 64:70],
test2[28, 1:7], test2[28, 8:14], test2[28, 15:21],
test2[28, 22:28], test2[28, 29:35], test2[28, 36:42],
test2[28, 43:49], test2[28, 50:56], test2[28, 57:63],
test2[28, 64:70],
test2[29, 1:7], test2[29, 8:14], test2[29, 15:21],
test2[29, 22:28], test2[29, 29:35], test2[29, 36:42],
test2[29, 43:49], test2[29, 50:56], test2[29, 57:63],
test2[29, 64:70],
test2[30, 1:7], test2[30, 8:14], test2[30, 15:21],
test2[30, 22:28], test2[30, 29:35], test2[30, 36:42],
test2[30, 43:49], test2[30, 50:56], test2[30, 57:63],
test2[30, 64:70],
test2[31, 1:7], test2[31, 8:14], test2[31, 15:21],
test2[31, 22:28], test2[31, 29:35], test2[31, 36:42],
test2[31, 43:49], test2[31, 50:56], test2[31, 57:63],
test2[31, 64:70],
test2[32, 1:7], test2[32, 8:14], test2[32, 15:21],
test2[32, 22:28], test2[32, 29:35], test2[32, 36:42],
test2[32, 43:49], test2[32, 50:56], test2[32, 57:63],
test2[32, 64:70],
test2[33, 1:7], test2[33, 8:14], test2[33, 15:21],
test2[33, 22:28], test2[33, 29:35], test2[33, 36:42],
test2[33, 43:49], test2[33, 50:56], test2[33, 57:63],
test2[33, 64:70],
test2[34, 1:7], test2[34, 8:14], test2[34, 15:21],
test2[34, 22:28], test2[34, 29:35], test2[34, 36:42],
test2[34, 43:49], test2[34, 50:56], test2[34, 57:63],
test2[34, 64:70],
test2[35, 1:7], test2[35, 8:14], test2[35, 15:21],
test2[35, 22:28], test2[35, 29:35], test2[35, 36:42],
test2[35, 43:49], test2[35, 50:56], test2[35, 57:63],
test2[35, 64:70],
test2[36, 1:7], test2[36, 8:14], test2[36, 15:21],
test2[36, 22:28], test2[36, 29:35], test2[36, 36:42],
test2[36, 43:49], test2[36, 50:56], test2[36, 57:63],
test2[36, 64:70],
test2[37, 1:7], test2[37, 8:14], test2[37, 15:21],
test2[37, 22:28], test2[37, 29:35], test2[37, 36:42],
test2[37, 43:49], test2[37, 50:56], test2[37, 57:63],
test2[37, 64:70],
test2[38, 1:7], test2[38, 8:14], test2[38, 15:21],
test2[38, 22:28], test2[38, 29:35], test2[38, 36:42],
test2[38, 43:49], test2[38, 50:56], test2[38, 57:63],
test2[38, 64:70],
test2[39, 1:7], test2[39, 8:14], test2[39, 15:21],
test2[39, 22:28], test2[39, 29:35], test2[39, 36:42],
test2[39, 43:49], test2[39, 50:56], test2[39, 57:63],
test2[39, 64:70],
test2[40, 1:7], test2[40, 8:14], test2[40, 15:21],
test2[40, 22:28], test2[40, 29:35], test2[40, 36:42],
test2[40, 43:49], test2[40, 50:56], test2[40, 57:63],
test2[40, 64:70],
test2[41, 1:7], test2[41, 8:14], test2[41, 15:21],
test2[41, 22:28], test2[41, 29:35], test2[41, 36:42],
test2[41, 43:49], test2[41, 50:56], test2[41, 57:63],
test2[41, 64:70],
test2[42, 1:7], test2[42, 8:14], test2[42, 15:21],
test2[42, 22:28], test2[42, 29:35], test2[42, 36:42],
test2[42, 43:49], test2[42, 50:56], test2[42, 57:63],
test2[42, 64:70],
test2[43, 1:7], test2[43, 8:14], test2[43, 15:21],
test2[43, 22:28], test2[43, 29:35], test2[43, 36:43],
test2[43, 43:49], test2[43, 50:56], test2[43, 57:63],
test2[43, 64:70],
test2[44, 1:7], test2[44, 8:14], test2[44, 15:21],
test2[44, 22:28], test2[44, 29:35], test2[44, 36:44],
test2[44, 43:49], test2[44, 50:56], test2[44, 57:63],
test2[44, 64:70],
test2[45, 1:7], test2[45, 8:14], test2[45, 15:21],
test2[45, 22:28], test2[45, 29:35], test2[45, 36:45],
test2[45, 43:49], test2[45, 50:56], test2[45, 57:63],
test2[45, 64:70])
tvp22Two <- tvp22Two[  , 1:5] # not sure why all the NA columns and don't need title extras
# remove all the blank rows
tvp22Two <- tvp22Two %>% filter(base > 1)  # 172 obs
# split YrTitleReg into three columns; remove white space
tvp22Two[6:8] <- str_split(string = tvp22Two$yrtitreg, pattern = ",", n = 3, simplify = TRUE)
colnames(tvp22Two) <- c("Base", "Bonus", "Email", "YrTitReg", "LeadTitle", "YearsFirm", "Title", "Region")
tvp22Two$Title <- str_trim(string = tvp22Two$Title, side = "both")
tvp22Two$Region <- str_trim(string = tvp22Two$Region, side = "both")
# extract firm short name
tvp22Two$Firm <- str_remove_all(string = tvp22Two$Email, pattern = "^.+@")
tvp22Two$Firm <- str_remove_all(string = tvp22Two$Firm, pattern = "\\..+$")
# add Total
tvp22Two$Total <- tvp22Two$Base + tvp22Two$Bonus
# remove YrTitReg [4], move Total after base and bonus and put in tvp22
tvp22 <- tvp22Two[   , c(1:2, 10, 3, 5:9)]
# CONVERT FROM CANADIAN, EG BLAKES, LAVERY AND Bennet Jones (8 total professionals)
# which(tvp22$Region == "Canada")
tvp22$Base <- ifelse(tvp22$Region == "Canada", tvp22$Base*0.8, tvp22$Base)
tvp22$Bonus <- ifelse(tvp22$Region == "Canada", tvp22$Bonus*0.8, tvp22$Bonus)
tvp22$Total <- ifelse(tvp22$Region == "Canada", tvp22$Total*0.8, tvp22$Total)
# add Amlaw Rank in Excel
Amlaw <- read_xlsx("C:/Users/rees/Documents/R/Projects/CLIENTS/TVP22/Cleantvp220616.xlsx")
Amlaw <- Amlaw %>% filter(AMLAW > 1)   #42
# unique(tvp22$Firm)  # 41, since one did not identify itself
# funModeling::v_compare(unique(tvp22$Firm), Amlaw$Firm) # not in tvp22 are Crowell and Womble wbd
tvp22 <- left_join(tvp22, Amlaw[  , c("Firm", "AMLAW")])
# save tvp22 at this point to correct seven Other titles and estimate Amlaw by # of lawyers
# writexl::write_xlsx(x = tvp22, path = "~/R/Projects/CLIENTS/TVP22/2022Clean.xlsx")
# one missing AMLAW has 390 lawyers in Southwest.  Lowestein Sandler has 350 in NJ/NY at 103.  Saul Ewing has 400 in Philly at 135 so I gave it 130;  other missing has 1100 in Southwest.  MWE has same at 24; Foley has same at 48.  I gave it 40
# Ballard Spahr picked Chief but in the table said Director!!  Based on comp, I left Dir
# tvp22$Title[103] <- "Director" # Husch Blackwell but he put in his title (see spreadshet)
# tvp22$Title[37] <- "Director" # Faegre Managing Director, Strategic Pricing and Client Value
# tvp22$Title[96] <- "Manager"    # Mayer Brown Assistant Director of Pricing
# tvp22$Title[42] <-  "Manager" # Norton Rose auren.spangler 200K filled in "Sr Manager"
# tvp22$Title[43] <- "Manager" # Norton Rose   made 10000 more than other Manager
# tvp22$Title[62] <- "Analyst" # Perkins
# tvp22$Title[123] <- "Director" # Proskauer comp is high & bonus, but several directors above
# further fixes of Title (may have done this for the Lead Pricing Profs)
# tvp22$Title[26] <- "Director"    # SHook Hardy Director of Pricing, Planning and Analysis
# tvp22$Title[108] <- "Chief" # kgavin
# tvp22$Title[110] <- "Director" # efrenzel Perkins he put in title see downloaded export
# tvp22$Title[41] <- "Chief" #  Proskauer Global Head (I looked at other chiefs)
# tvp22$Title[115] <- "Manager" #  Huschblackwell
# tvp22$Title[125] <- "Analyst" # Norton Rose
#  Clean TITLES:  Email May 4 got approval 3 have Other but not fill in a TitleText!!
# tvp22 <- tvp22 %>% mutate(Title =
#            case_when(Title == "Director of Pricing, Planning and Analysis" ~ "Director",
#                      Title == "Lead Director, report to Chief Innovation Offier." ~ "Director",
#                      Title == "Assistant Director of Pricing" ~ "Manager",
#                      TRUE ~ Title))
# read in the clean set   172 observations with Titles fixed and Amlaws estimated
tvp22 <- read_xlsx("C:/Users/rees/Documents/R/Projects/CLIENTS/TVP22/2022Clean.xlsx")
# Even so, missing comp data from Womble (Keith Dunn, wbd) and from Crowell mlaws
TitleAmlaw <- tvp22 %>% filter(Title %in% c("Manager", "Chief/Director")) %>%
mutate(Rank =
case_when(
AMLAW < 101 ~ "AmLaw 100",
TRUE ~ "Higher than AmLaw 100")) %>%
droplevels()
TitleAmlaw.tbl <- table(TitleAmlaw$Title, TitleAmlaw$Rank)
library(gmodels)
install.packages("gmodels")
library(gmodels)
CrossTable(x = TitleAmlaw$Title, y = TitleAmlaw$Rank, prop.chisq = TRUE, prop.c = FALSE,
prop.r = FALSE)
res.chi2 <- chisq.test(TitleAmlaw.tbl)
print(res.chi2)
TitleAmlaw.tbl
levels(tvp22$Title)
levels(tvp22$Title)
levels(factor(tvp22$Title))
TitleAmlaw <- tvp22 %>% filter(Title %in% c("Manager", "Chief", "Director")) %>%
mutate(Rank =
case_when(
AMLAW < 101 ~ "AmLaw 100",
TRUE ~ "Higher than AmLaw 100")) %>%
droplevels()
TitleAmlaw.tbl <- table(TitleAmlaw$Title, TitleAmlaw$Rank)
TitleAmlaw.tbl
CrossTable(x = TitleAmlaw$Title, y = TitleAmlaw$Rank, prop.chisq = TRUE, prop.c = FALSE,
prop.r = FALSE)
res.chi2 <- chisq.test(TitleAmlaw.tbl)
print(res.chi2)
serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
binary <- data.frame(Answer = c("Yes", "No"),
Pct = c(0.60, 0.40))
ggplot(binary, aes(x = Answer, y = Pct)) +
geom_col()
column <- ggplot(binary, aes(x = Answer, y = Pct)) +
geom_col(width = 0.7) +
labs(x = "Answer", y = "Pct.", title = "Bar Chart")
column
column <- ggplot(binary, aes(x = Answer, y = Pct)) +
geom_col(width = 0.7) +
labs(x = "Answer", y = "Pct.", title = "Bar Chart") +
scale_y_continuous(labels = "percent")
column
column <- ggplot(binary, aes(x = Answer, y = Pct)) +
geom_col(width = 0.7) +
labs(x = "Answer", y = "Pct.", title = "Bar Chart") +
scale_y_continuous(breaks = seq(0, 100, 20), labels = "percent")
column <- ggplot(binary, aes(x = Answer, y = Pct)) +
geom_col(width = 0.7) +
labs(x = "Answer", y = "Pct.", title = "Bar Chart") +
scale_y_continuous(breaks = seq(0, 100, 20), labels = percent_format())
column
column <- ggplot(binary, aes(x = Answer, y = Pct)) +
geom_col(width = 0.7) +
labs(x = "Answer", y = "Pct.", title = "Bar Chart") +
scale_y_continuous(breaks = seq(0, 1, 020), labels = percent_format())
column
column <- ggplot(binary, aes(x = Answer, y = Pct)) +
geom_col(width = 0.7) +
labs(x = "Answer", y = "Pct.", title = "Bar Chart") +
scale_y_continuous(breaks = seq(0, 1, 0.2), labels = percent_format())
column
library(plotrix)   # for fanplot of DataVisualizations
install.packages("plotrix")
library(plotrix)   # for fanplot of DataVisualizations
Fanplot(binary$Pct)
fan.plot(binary$Pct)
fan.plot(x = binary$Pct, max.span = pi, main = "Fanplot")
View(binary)
fan <- ggplot(binary, aes(x = Answer, y = Pct)) +
geom_fan() +
labs(x = "Answer", y = "Pct.", title = "Bar Chart") +
scale_y_continuous(breaks = seq(0, 1, 0.2), labels = percent_format())
install.packages("ggfan")
library(ggfan)
fan <- ggplot(binary, aes(x = Answer, y = Pct)) +
geom_fan() +
labs(x = "Answer", y = "Pct.", title = "Bar Chart") +
scale_y_continuous(breaks = seq(0, 1, 0.2), labels = percent_format())
fan
fan.df <- data.frame(Answers = rep("Yes", 20), rep("No", 8))
rep("Yes", 20)
rep("No", 8)
fan.df <- data.frame(Answers = rep("Yes", 20), rep("No", 8))
fan.df <- data.frame(Answers = c(rep("Yes", 20), rep("No", 8)))
fan <- ggplot(fan.df, aes(x = Answers)) +
geom_fan() +
labs(x = "Answer", y = "Pct.", title = "Bar Chart") +
scale_y_continuous(breaks = seq(0, 1, 0.2), labels = percent_format())
fan
ggplot(fan.df, aes(x = Answers)) +
geom_fan(stat = "interval")
View(fan.df)
stacked <- ggplot(binary, aes(x="", y=Pct, fill=Answer)) +
geom_bar(width = 1, stat = "identity")
stacked
pie <- ggplot(binary, aes(x = "", y = Pct, fill = Answer)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
labs(x = "Answer", y = "Pct.", title = "Bar Chart") +
scale_y_continuous(breaks = seq(0, 1, 0.2), labels = percent_format())
pie
26 + 23 + 12
serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
stop_server()
blogdown:::new_post_addin()
knitr::opts_chunk$set(echo = FALSE, warning=FALSE, message = FALSE)
library(tidyverse)  # frequently used packages that follow a similar coding approach
library(blogdown)
library(knitr)
library(funModeling) # to compare vectors against each other, such as URLs of posts
library(ggthemes) # to include the theme_tufte them in plots
library(lubridate) # to deal with date data, such as the date a post is published
library(ggrepel) # to spread points or text so that they do not overlap on a plot
library(readxl) # to read in the underlying Excel data
library(tidytext) # text-mining functions that help analyse the content of posts
library(writexl)
library(kableExtra)
blogdown:::new_post_addin()
gcComp <- data.frame(GC = c(200000, 300000, 500000, 220000, 450000),
DGC = c(150000, 175000, 230000, 190000, 275000))
ggplot(gcComp, aes(x = GC, y = DGC)) +
geom_point()
ggplot(gcComp, aes(x = GC, y = DGC)) +
geom_point(pch = 20, size = 5) +
labs(x = "GC Compensation", y = "DGC Compensation", title = "Comparing Compensation of GC to DGC") +
scale_y_continuous(breaks = seq(0, 500000, 50000), labels = dollar_format()) +
scale_x_continuous(breaks = seq(0, 500000, 50000), labels = dollar_format()) +
theme(axis.text.x = element_blank())
# GC	 $200,000	DGC	$150,000
# GC	 $300,000	DGC	$175,000
# GC	 $500,000	DGC	$230,000
# GC	 $220,000	DGC	$190,000
# GC	 $450,000	DGC	$275,000
library(tidyverse)  # frequently used packages that follow a similar coding approach
ggplot(gcComp, aes(x = GC, y = DGC)) +
geom_point(pch = 20, size = 5) +
labs(x = "GC Compensation", y = "DGC Compensation", title = "Comparing Compensation of GC to DGC") +
scale_y_continuous(breaks = seq(0, 500000, 50000), labels = dollar_format()) +
scale_x_continuous(breaks = seq(0, 500000, 50000), labels = dollar_format()) +
theme(axis.text.x = element_blank())
ggplot(gcComp, aes(x = GC, y = DGC)) +
geom_point(pch = 20, size = 5) +
labs(x = "GC Compensation", y = "DGC Compensation", title = "Comparing Compensation of GC to DGC") +
scale_y_continuous(breaks = seq(0, 500000, 50000), labels = scales::dollar_format()) +
scale_x_continuous(breaks = seq(0, 500000, 50000), labels = scales::dollar_format()) +
theme(axis.text.x = element_blank())
ggplot(gcComp, aes(x = GC, y = DGC)) +
geom_point(pch = 20, size = 5) +
labs(x = "GC Compensation", y = "DGC Compensation", title = "Comparing Compensation of GC to DGC") +
scale_y_continuous(breaks = seq(0, 500000, 50000), labels = scales::dollar_format()) +
scale_x_continuous(breaks = seq(0, 600000, 50000), labels = scales::dollar_format()) +
theme(axis.text.x = element_blank())
View(gcComp)
ggplot(gcComp, aes(x = GC, y = DGC)) +
geom_point(pch = 20, size = 5) +
labs(x = "GC Compensation", y = "DGC Compensation", title = "Comparing Compensation of GC to DGC") +
# scale_y_continuous(breaks = seq(0, 500000, 50000), labels = scales::dollar_format()) +
scale_x_continuous(breaks = seq(0, 600000, 50000), labels = scales::dollar_format()) +
theme(axis.text.x = element_blank())
ggplot(gcComp, aes(x = GC, y = DGC)) +
geom_point(pch = 20, size = 5)
gcComp$GC <- as.numeric(gcComp$GC)
ggplot(gcComp, aes(x = GC, y = DGC)) +
geom_point(pch = 20, size = 5) +
labs(x = "GC Compensation", y = "DGC Compensation", title = "Comparing Compensation of GC to DGC") +
# scale_y_continuous(breaks = seq(0, 500000, 50000), labels = scales::dollar_format()) +
scale_x_continuous(breaks = seq(0, 600000, 50000), labels = scales::dollar_format()) +
theme(axis.text.x = element_blank())
str(gcComp)
ggplot(gcComp, aes(x = GC, y = DGC)) +
geom_point(pch = 20, size = 5) +
labs(x = "GC Compensation", y = "DGC Compensation", title = "Comparing Compensation of GC to DGC") +
scale_y_continuous(breaks = seq(0, 500000, 50000), labels = scales::dollar_format()) +
scale_x_continuous(breaks = seq(0, 600000, 50000), labels = scales::dollar_format())
serve_site()
kable(gcComp)
library(tidyverse)
library(kableExtra)
gcComp <- data.frame(GC = c(200000, 300000, 500000, 220000, 450000),
DGC = c(150000, 175000, 230000, 190000, 275000))
gcComp$GC <- as.numeric(gcComp$GC)
kable(gcComp) %>%
kable_classic_2() %>%
kable_styling(position = "center", full_width = FALSE, latex_options = "hold_position") %>%
row_spec(1, bold = TRUE, align = "c")
kable(gcComp) %>%
kable_classic_2() %>%
kable_styling(position = "center", full_width = FALSE, latex_options = "hold_position") %>%
row_spec(0, bold = TRUE, align = "c")
library(formattable)
install.packages("formattable")
library(formattable)
gcComp$GC <- currency(gcComp$GC, digits = 0L)
gcComp$DGC <- currency(gcComp$DGC, digits = 0L)
kable(gcComp) %>%
kable_classic_2() %>%
kable_styling(position = "center", full_width = FALSE, latex_options = "hold_position") %>%
row_spec(0, bold = TRUE, align = "c")
ggplot(gcComp, aes(x = GC, y = DGC)) +
geom_point(pch = 20, size = 5) +
labs(x = "GC Compensation", y = "DGC Compensation", title = "Comparing Compensation of GC to DGC") +
scale_y_continuous(breaks = seq(0, 500000, 50000), labels = scales::dollar_format()) +
scale_x_continuous(breaks = seq(0, 600000, 50000), labels = scales::dollar_format())
knitr::kable(gcComp, booktabs = TRUE) %>%
kable_classic_2() %>%
kable_styling(position = "center", full_width = FALSE, latex_options = "hold_position") %>%
row_spec(0, bold = TRUE, align = "c")
blogdown:::new_post_addin()
blogdown:::new_post_addin()
stop_server()
knitr::opts_chunk$set(echo = FALSE, warning=FALSE, message = FALSE)
library(tidyverse)  # frequently used packages that follow a similar coding approach
library(blogdown)
library(knitr)
library(funModeling) # to compare vectors against each other, such as URLs of posts
library(ggthemes) # to include the theme_tufte them in plots
library(lubridate) # to deal with date data, such as the date a post is published
library(ggrepel) # to spread points or text so that they do not overlap on a plot
library(readxl) # to read in the underlying Excel data
library(tidytext) # text-mining functions that help analyse the content of posts
library(writexl)
library(kableExtra)
serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
figPath <- "C:/Users/rees/Documents/R/Projects/LAWYER Hornbooks/5Surveys/SavSurvBlog/SurveyBlog/static/media/"
![ ](paste0(figpath, "RStudio Screenshot Scripts Post.png"))
![RStudio](paste0(figpath, "RStudio Screenshot Scripts Post.png"))
![RStudio]("C:/Users/rees/Documents/R/Projects/LAWYER Hornbooks/5Surveys/SavSurvBlog/SurveyBlog/static/media/RStudio Screenshot Scripts Post.png")
!["RStudio"]("C:/Users/rees/Documents/R/Projects/LAWYER Hornbooks/5Surveys/SavSurvBlog/SurveyBlog/static/media/RStudio Screenshot Scripts Post.png")
knitr::include_graphics("C:/Users/rees/Documents/R/Projects/LAWYER Hornbooks/5Surveys/SavSurvBlog/SurveyBlog/static/media/RStudio Screenshot Scripts Post.png")
blogdown:::new_post_addin()
knitr::include_graphics("C:/Users/rees/Documents/R/Projects/LAWYER Hornbooks/5Surveys/SavSurvBlog/SurveyBlog/static/media/RStudioScriptsPost.png")
knitr::include_graphics("C:/Users/rees/Documents/R/Projects/LAWYER Hornbooks/5Surveys/SavSurvBlog/SurveyBlog/static/media/RStudioIDEScripts.png")
knitr::opts_chunk$set(echo = FALSE, warning=FALSE, message = FALSE)
# ![RStudio](paste0(figpath, "RStudio Screenshot Scripts Post.png"))
# !["RStudio"]("C:/Users/rees/Documents/R/Projects/LAWYER Hornbooks/5Surveys/SavSurvBlog/SurveyBlog/static/media/RStudio Screenshot Scripts Post.png")
knitr::include_graphics("C:/Users/rees/Documents/R/Projects/LAWYER Hornbooks/5Surveys/SavSurvBlog/SurveyBlog/static/media/RStudioIDEScripts.png")
C:/Users/rees/Documents/R/Projects/LAWYER Hornbooks/5Surveys/SavSurvBlog/SurveyBlog/static/media/RStudioIDEScripts.png
knitr::include_graphics("C:/Users/rees/Documents/R/Projects/LAWYER Hornbooks/5Surveys/SavSurvBlog/SurveyBlog/static/media/RStudioIDEScripts.png")
# ![RStudio](paste0(figpath, "RStudio Screenshot Scripts Post.png"))
knitr::include_graphics("C:/Users/rees/Documents/R/Projects/LAWYER Hornbooks/5Surveys/SavSurvBlog/SurveyBlog/static/media/RStudioIDEScripts.png")
warnings()
0.98/10
0.98/sqrt(800)
0.98/sqrt(200)
0.98/sqrt(50)
1/25
1/.25
1/.0025
0.98/sqrt(100)
0.98/sqrt(200)
.07*600000
642-558
84/120
stop_server()
serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
stop_server()
help("mad")
knitr::opts_chunk$set(echo = FALSE, warning=FALSE, message = FALSE)
library(tidyverse)  # frequently used packages that follow a similar coding approach
library(blogdown)
library(knitr)
library(funModeling) # to compare vectors against each other, such as URLs of posts
library(ggthemes) # to include the theme_tufte them in plots
library(lubridate) # to deal with date data, such as the date a post is published
library(ggrepel) # to spread points or text so that they do not overlap on a plot
library(readxl) # to read in the underlying Excel data
library(tidytext) # text-mining functions that help analyse the content of posts
library(writexl)
library(kableExtra)
knitr::opts_chunk$set(echo = FALSE, warning=FALSE, message = FALSE)
serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
knitr::opts_chunk$set(echo = FALSE, warning=FALSE, message = FALSE)
library(tidyverse)  # frequently used packages that follow a similar coding approach
library(blogdown)
library(knitr)
library(funModeling) # to compare vectors against each other, such as URLs of posts
library(ggthemes) # to include the theme_tufte them in plots
library(lubridate) # to deal with date data, such as the date a post is published
library(ggrepel) # to spread points or text so that they do not overlap on a plot
library(readxl) # to read in the underlying Excel data
library(tidytext) # text-mining functions that help analyse the content of posts
library(writexl)
library(kableExtra)
serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
stop_server()
blogdown:::new_post_addin()
serve_site()
