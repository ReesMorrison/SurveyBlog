library(tidyverse)  # frequently used packages that follow a similar coding approach
library(blogdown)
library(knitr)
library(funModeling) # to compare vectors against each other, such as URLs of posts
library(ggthemes) # to include the theme_tufte them in plots
library(lubridate) # to deal with date data, such as the date a post is published
library(ggrepel) # to spread points or text so that they do not overlap on a plot
library(readxl) # to read in the underlying Excel data
library(tidytext) # text-mining functions that help analyse the content of posts
library(writexl)
library(kableExtra)
serve_site()
blogdown:::new_post_addin()
knitr::opts_chunk$set(echo=F, warning=F, message=F, fig.align='center')
knitr::opts_knit$set(root.dir = "C:/Users/rees/Documents/R/Projects/CLIENTS/UKRlosses/")
library(tidyverse)
library(dplyr)
library(readxl)
library(kableExtra)
library(scales)
library(xtable)
library(ggthemes)
library(ggrepel)
library(RColorBrewer)
library(TSPred)
library(GGally)
library(ggcorrplot)
library(caret)
ukrAll <- read_xlsx(path = "C:/Users/rees/Documents//R/Projects/CLIENTS/UKRlosses/ukrAll.xlsx")
outliers <- data.frame(bind_rows(ukrAll[ukrAll$Day == 42, c(1:6, 8:10, 12, 15)], ukrAll[ukrAll$Day == 5, c(1:6, 8:10, 12, 15)], ukrAll[ukrAll$Day == 247, c(1:6, 8:10, 12, 15)], ukrAll[ukrAll$Day == 284, c(1:6, 8:10, 12, 15)], ukrAll[ukrAll$Day == 147, c(1:6, 8:10, 12, 15)], ukrAll[ukrAll$Day == 142, c(1:6, 8:10, 12, 15)], ukrAll[ukrAll$Day == 283, c(1:6, 8:10, 12, 15)], ukrAll[ukrAll$Day == 265, c(1:6, 8:10, 12, 15)])) %>%
relocate(Tanks, APCs, AA, Arty, MLRS, Fuel, SpecEquip,  UAV, Soldiers, Date, Day)
kable(outliers, caption = "Days with Anomalous Losses", row.names = FALSE) %>%
kable_styling(position = "center", full_width = FALSE, latex_options = "hold_position") %>%
row_spec(c(1, 4), bold = TRUE, color = "red")
ukrOut <- ukrAll[  , c(1:11, 15)] # drop Date, Day of Week, Week, but keep day
# car::outlierTest(lm(Soldiers ~ ., data = ukrOut[ , -12])) # drop Day; suggests to me that it sees 247 as the only suspect
# ukrOut[247, ] # 9 Tanks, 3 APC, 1 AA, 0 MLRS, 19 Arty  yet 1140 soldiers
# ukrOut[223, ] # 9 Tanks, 11 APC, 3 AA, 0 MLRS, 23 Arty yet 1060 Soldiers
# ukrOut[5, ] # 34 Tanks, 91 APC, 18 AA, 20 FUEL but only 820 Soldiers
# ukrOut[284, ] # 3 Tanks, 2  APC, 2 MLRS, 0 AA, 12 Arty but 810 Soldiers
# ukrOut[42, ] # 4 Tanks, 14 APC, 2 MLRS, 1 AA, 29 Arty but only 460 Soldiers
# ukrOut[142, ] # 0 Tanks, 14 APC, 4 MLRS, 1 AA, 29 Arty but only 480 Soldiers
# as.Date("2023-01-01") + 246 # identify day of the year from day count
knitr::opts_chunk$set(echo=F, warning=F, message=F, fig.align='center')
knitr::opts_knit$set(root.dir = "C:/Users/rees/Documents/R/Projects/CLIENTS/UKRlosses/")
library(tidyverse)
library(dplyr)
library(readxl)
library(kableExtra)
library(scales)
library(xtable)
library(ggthemes)
library(ggrepel)
library(RColorBrewer)
library(TSPred)
library(GGally)
library(ggcorrplot)
library(caret)
ukrAll <- read_xlsx(path = "C:/Users/rees/Documents//R/Projects/CLIENTS/UKRlosses/ukrAll.xlsx")
outliers <- data.frame(bind_rows(ukrAll[ukrAll$Day == 42, c(1:6, 8:10, 12, 15)], ukrAll[ukrAll$Day == 5, c(1:6, 8:10, 12, 15)], ukrAll[ukrAll$Day == 247, c(1:6, 8:10, 12, 15)], ukrAll[ukrAll$Day == 284, c(1:6, 8:10, 12, 15)], ukrAll[ukrAll$Day == 147, c(1:6, 8:10, 12, 15)], ukrAll[ukrAll$Day == 142, c(1:6, 8:10, 12, 15)], ukrAll[ukrAll$Day == 283, c(1:6, 8:10, 12, 15)], ukrAll[ukrAll$Day == 265, c(1:6, 8:10, 12, 15)])) %>%
relocate(Tanks, APCs, AA, Arty, MLRS, Fuel, SpecEquip,  UAV, Soldiers, Date, Day)
kable(outliers, caption = "Days with Anomalous Losses", row.names = FALSE) %>%
kable_styling(position = "center", full_width = FALSE, latex_options = "hold_position") %>%
row_spec(c(1, 4), bold = TRUE, color = "red")
ukrOut <- ukrAll[  , c(1:11, 15)] # drop Date, Day of Week, Week, but keep day
# car::outlierTest(lm(Soldiers ~ ., data = ukrOut[ , -12])) # drop Day; suggests to me that it sees 247 as the only suspect
# ukrOut[247, ] # 9 Tanks, 3 APC, 1 AA, 0 MLRS, 19 Arty  yet 1140 soldiers
# ukrOut[223, ] # 9 Tanks, 11 APC, 3 AA, 0 MLRS, 23 Arty yet 1060 Soldiers
# ukrOut[5, ] # 34 Tanks, 91 APC, 18 AA, 20 FUEL but only 820 Soldiers
# ukrOut[284, ] # 3 Tanks, 2  APC, 2 MLRS, 0 AA, 12 Arty but 810 Soldiers
# ukrOut[42, ] # 4 Tanks, 14 APC, 2 MLRS, 1 AA, 29 Arty but only 460 Soldiers
# ukrOut[142, ] # 0 Tanks, 14 APC, 4 MLRS, 1 AA, 29 Arty but only 480 Soldiers
# as.Date("2023-01-01") + 246 # identify day of the year from day count
# Calculate outlier values (e.g., values beyond 1.5 * IQR)
outliers <- ukrOut %>%
mutate(outlier = ifelse(APCs < quantile(APCs, 0.25) - 1.5 * IQR(APCs) |
APCs > quantile(APCs, 0.75) + 1.5 * IQR(APCs),
APCs, NA))
# Create a data frame for labels using the "Date" variable
# label_data <- outliers %>% select(Day, outlier) %>% filter(!is.na(outlier))
ggplot(outliers, aes(x = Soldiers, y = APCs)) +   # color = ifelse(DayOfWeek %in% c("Sat", "Sun"), "blue", "yellow")
geom_violin(trim = FALSE) +
geom_boxplot(width = 0.2, outlier.colour = "red") +
labs(x = "Soldier Casualties", y = "APCs Losses", title = "Violin Plot of Soldier Casualties by APC Losses; Outliers in Red") +
# theme(legend.position = "none") +
# guides(color = FALSE) +
# theme(axis.text.x = element_text(angle = 0)) +
scale_x_continuous(breaks = seq(0, 1500, 100)) +
scale_y_continuous(breaks = seq(0, 100, 5)) +
# stat_summary(fun.y=mean, geom="point", size=4, color="green") +
geom_jitter(shape = 16, position = position_jitter(0.1)) +
theme_classic() +
ggplot2::annotate("text", x = 640, y = max(outliers$APCs), label = "Day 5 at 91 >>")
# geom_text(data = label_data, aes(label = outlier),  nudge_x = 0.2, nudge_y = 0.2)
# quantile(ukrAll$APCs, prob=c(.25,.5,.75), type=1)  # third quartile
library(ggdist)
library(ghibli)
# remove 5 (91 APCs) and 142 (80 UAV) as they mess up the raincloud plot
outliersLong <- outliers[-c(5, 142), ] %>% pivot_longer(., cols = c("Tanks", "APCs", "Arty", "UAV"), names_to = "Equipment", values_to = "Losses")
ggplot(outliersLong, aes(x = Equipment, y = Losses, fill = Equipment)) +
scale_fill_ghibli_d("SpiritedMedium", direction = -1) +
geom_boxplot(width = 0.2, outlier.colour = "red") +
labs(x = NULL, y = NULL, title = "Losses per Day by Equipment", subtitle = "Excluding two outlier days (91 APCs and 80 UAVs)") +
theme_classic(base_size=16, base_family="serif") +
theme(text = element_text(size=14),
# axis.text.x = element_text(angle=0, hjust=.5, vjust = 0.5, color = "black"),
# axis.text.y = element_text(color = "black"),
plot.title = element_text(hjust = 0.5),   # center title of plot
plot.subtitle = element_text(hjust = 0.5),
legend.position="none")+
scale_y_continuous(breaks = seq(0, 65, by = 5), limits = c(0, 65), expand = c(0, 0)) +
# Line below adds dot plots from {ggdist} package
#  stat_dots(side = "left", justification = 1.04, binwidth = 1.2) +
# Line below adds half-violin from {ggdist} package
stat_halfeye(adjust = .2, width = .7, justification = -.2, .width = 0, point_colour = NA)
library(mvoutlier)
invisible(aq.plot(x = ukrNorm[ , c(1:5)])) # looks the same as the unnormalized
invisible(car::influencePlot(lm(Soldiers ~ ., data = ukrOut), id.n = 5))
# car::influencePlot(lm(prestige ~ income + education, data=Duncan), id.n =5)[-2]  # posted SO question on 11/14 at 10:17 AM
# which.max(stats::cooks.distance(model = lm(Soldiers ~ ., data = ukrOut)))  # day 5
car::influenceIndexPlot(lm(Soldiers ~ ., data = ukrOut), id.n = 5, vars = "Cook") # vars could be "Studentized", "Bonf" or "hat"
car::avPlots(lm(Soldiers ~ ., data = ukrOut[ , -c(7, 11, 12)]), id.n = 5, id.cex = 0.7,
main = "Added-Variable Plots of Equipment Losses and Residuals", marginal.scale = TRUE)
# when marginal.scale = F, x on APCs is -20 to 60; Tanks is -10 to 25
# when marginal.scale = T, x on APCs is -20 to 80; Tanks is -10 to 40; Arty is -20 to 33  (T means range minus mean)
stop_server()
knitr::opts_chunk$set(echo = FALSE, warning=FALSE, message = FALSE)
library(tidyverse)  # frequently used packages that follow a similar coding approach
library(blogdown)
library(knitr)
library(funModeling) # to compare vectors against each other, such as URLs of posts
library(ggthemes) # to include the theme_tufte them in plots
library(lubridate) # to deal with date data, such as the date a post is published
library(ggrepel) # to spread points or text so that they do not overlap on a plot
library(readxl) # to read in the underlying Excel data
library(tidytext) # text-mining functions that help analyse the content of posts
library(writexl)
library(kableExtra)
library(tidyverse)  # frequently used packages that follow a similar coding approach
library(blogdown)
library(knitr)
library(funModeling) # to compare vectors against each other, such as URLs of posts
library(ggthemes) # to include the theme_tufte them in plots
library(lubridate) # to deal with date data, such as the date a post is published
library(ggrepel) # to spread points or text so that they do not overlap on a plot
library(readxl) # to read in the underlying Excel data
library(tidytext) # text-mining functions that help analyse the content of posts
library(writexl)
library(kableExtra)
knitr:: opts_chunk$set(echo=F, warning=F, message=F, fig.align='center')
library(tidyverse)
library(kableExtra)
library(readxl)
knitr::opts_chunk$set(echo = FALSE, warning=FALSE, message = FALSE)
library(tidyverse)
library(knitr)
library(bookdown)
library(tidytext)
library(kableExtra)
library(blogdown)
save .Rmd, bookdown::render_book("index.Rmd", "bookdown::pdf_book")
save.Rmd, bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("SavSurvGuideLean.Rmd", "bookdown::pdf_book")
bookdown::render_book("C:/Users/rees/Documents/R/Projects/LAWYER Hornbooks/5Surveys/SurveyBook/SavSurvGuideLean.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "all")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
blogdown:::blogdown_site
bookdown::pdf_book
bookdown::pdf_book()
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
knitr::opts_chunk$set(echo = FALSE, warning=FALSE, message = FALSE)
library(tidyverse)  # frequently used packages that follow a similar coding approach
library(blogdown)
library(knitr)
library(funModeling) # to compare vectors against each other, such as URLs of posts
library(ggthemes) # to include the theme_tufte them in plots
library(lubridate) # to deal with date data, such as the date a post is published
library(ggrepel) # to spread points or text so that they do not overlap on a plot
library(readxl) # to read in the underlying Excel data
library(tidytext) # text-mining functions that help analyse the content of posts
library(writexl)
library(kableExtra)
serve_site()
blogdown:::new_post_addin()
stop_server()
knitr::opts_chunk$set(echo = FALSE, warning=FALSE, message = FALSE)
library(tidyverse)  # frequently used packages that follow a similar coding approach
library(blogdown)
library(knitr)
library(funModeling) # to compare vectors against each other, such as URLs of posts
library(ggthemes) # to include the theme_tufte them in plots
library(lubridate) # to deal with date data, such as the date a post is published
library(ggrepel) # to spread points or text so that they do not overlap on a plot
library(readxl) # to read in the underlying Excel data
library(tidytext) # text-mining functions that help analyse the content of posts
library(writexl)
library(kableExtra)
serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
install.packages("pacman")
install.packages("lavaan")
install.packages("vtable")
install.packages("ggcharts")
stop_server()
blogdown:::preview_site()
dir()
wd()
getwd()
serve_site()
![redherringExample](C:/Users/rees/Documents/R/Projects/LAWYERHornbooks/5Surveys/SavSurvBlog/SurveyBlog/static/media/BellomyRed.png)
blogdown:::new_post_addin()
stop_server()
knitr::opts_chunk$set(echo = FALSE, warning=FALSE, message = FALSE)
library(tidyverse)  # frequently used packages that follow a similar coding approach
library(blogdown)
library(knitr)
library(funModeling) # to compare vectors against each other, such as URLs of posts
library(ggthemes) # to include the theme_tufte them in plots
library(lubridate) # to deal with date data, such as the date a post is published
library(ggrepel) # to spread points or text so that they do not overlap on a plot
library(readxl) # to read in the underlying Excel data
library(tidytext) # text-mining functions that help analyse the content of posts
library(writexl)
library(kableExtra)
serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
knitr::opts_chunk$set(echo = FALSE, warning=FALSE, message = FALSE)
library(tidyverse)  # frequently used packages that follow a similar coding approach
library(blogdown)
library(knitr)
library(funModeling) # to compare vectors against each other, such as URLs of posts
library(ggthemes) # to include the theme_tufte them in plots
library(lubridate) # to deal with date data, such as the date a post is published
library(ggrepel) # to spread points or text so that they do not overlap on a plot
library(readxl) # to read in the underlying Excel data
library(tidytext) # text-mining functions that help analyse the content of posts
library(writexl)
library(kableExtra)
serve_site()
blogdown:::new_post_addin()
knitr::include_graphics("C:/Users/rees/Documents/R/Projects/LAWYER Hornbooks/5Surveys/SavSurvBlog/SurveyBlog/static/media/LeopardQuotes.png")
knitr::include_graphics("C:/Users/rees/Documents/R/Projects/LAWYER Hornbooks/5Surveys/SavSurvBlog/SurveyBlog/static/media/law360_pulse-compensation_report-law_firms.pdf")
knitr::include_graphics("C:/Users/rees/Documents/R/Projects/LAWYER Hornbooks/5Surveys/SavSurvBlog/SurveyBlog/static/media/LittlerAbstractDesign.jpg")
knitr::include_graphics("C:/Users/rees/Documents/R/Projects/LAWYER Hornbooks/5Surveys/SavSurvBlog/SurveyBlog/static/media/Image Law360 pulse compensation.png")
knitr::include_graphics("C:/Users/rees/Documents/R/Projects/LAWYER Hornbooks/5Surveys/SavSurvBlog/SurveyBlog/static/media/Atticus 2023 Social Security.png")
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
getwd()
stop_server()
knitr::opts_chunk$set(echo = FALSE, warning=FALSE, message = FALSE)
library(tidyverse)  # frequently used packages that follow a similar coding approach
library(blogdown)
library(knitr)
library(funModeling) # to compare vectors against each other, such as URLs of posts
library(ggthemes) # to include the theme_tufte them in plots
library(lubridate) # to deal with date data, such as the date a post is published
library(ggrepel) # to spread points or text so that they do not overlap on a plot
library(readxl) # to read in the underlying Excel data
library(tidytext) # text-mining functions that help analyse the content of posts
library(writexl)
library(kableExtra)
knitr::opts_chunk$set(echo = FALSE, warning=FALSE, message = FALSE)
serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
knitr:: opts_chunk$set(echo=F, warning=F, message=F, fig.align='center')
# opts_chunk$set(fig.width=7.5, fig.height=7)
# opts_chunk$set(comment="", tidy=TRUE, fig.retina=2, cache = TRUE)
library(tidyverse)
library(readxl)
# library(kableExtra)
library(scales)
library(xtable)
library(ggthemes)
library(ggrepel)
library(RColorBrewer)
library(kableExtra)
# library(ggthemr)
# ggthemr('dust')   # change for second release, so it looks different?
choro = read_xlsx(path = "C:/Users/rees/Documents/R/Projects/CLIENTS/COO Comp 2023/comboReportFinal.xlsx")
library(viridis)
library(maps)
library(ggmap)
states <- map('state', fill=TRUE, col="transparent", plot=FALSE)
state_coords <- lapply(states, function(x) x$range$y)
View(states)
state_lat_long <- lapply(state_coords, function(x) {
lat <- c(min(x), max(x))
long <- c(min(x, na.rm=TRUE), max(x, na.rm=TRUE))
return(c(lat, long))
})
state_lat_long <- lapply(states, function(x) {
lat <- x$y
long <- x$x
return(list(lat = lat, long = long))
})
# Get the latitude and longitude data for US states
us_states <- map_data("state")
View(us_states)
# I removed two duplicates" Schwabe Wiliams and LaChapelle
choro = read_xlsx(path = "C:/Users/rees/Documents/R/Projects/CLIENTS/COO Comp 2023/comboReportFinal.xlsx")
View(us_states)
# Convert State to lowercase
# Convert the "region" variable to two-letter uppercase abbreviations
us_states$State <- state_abbreviations[us_states$region]
# Create a mapping from lowercase state names to two-letter abbreviations
state_mapping <- setNames(state.abb, tolower(state.name))
head(state_mapping)
us_states$State <- state_mapping[us_states$region]
choro <- left_join(choro[   , 1:16], us_states)
choro <- read_xlsx(path = "C:/Users/rees/Documents/R/Projects/CLIENTS/COO Comp 2023/comboReportFinal.xlsx")
# Get the latitude and longitude data for US states
us_states <- map_data("state")
# Create a mapping from lowercase state names to two-letter abbreviations
state_mapping <- setNames(state.abb, tolower(state.name))
us_states$State <- state_mapping[us_states$region]
choro <- left_join(choro[   , 1:16], us_states)
ggplot(choro, aes(long, lat, group = group, fill = State)) +
geom_polygon(color = "white") +
scale_fill_viridis_b(breaks = c(15, 20, 25, 30, 35),
na.value = "grey") +
labs(fill = "",
title = "Distribution of COO Largest City's State",
na.value = "No data") +
theme_map() +
scale_alpha_manual(values = 1) +
guides(
fill = guide_colorsteps(order = 1),
alpha = guide_legend(order = 2, override.aes = list(fill = "grey")))
stop_server()
knitr:: opts_chunk$set(echo=F, warning=F, message=F, fig.align='center')
library(tidyverse)
library(readxl)
library(kableExtra)
library(scales)  # among others, for dollar_format()
library(xtable)
library(tidytext)
library(funModeling)
library(ggwordcloud)
library(ggthemes)
library(ggrepel)
library(RColorBrewer)
# library(ggthemr)
# ggthemr('dust')
law360 <- readxl::read_xlsx("C:/Users/rees/Documents/R/Projects/CLIENTS/LFExecDirs/Copy of Law360 No Missing Rows Macros.xlsm", sheet = "uniques")  # 3511 on 11/12
law360 <- law360 %>% filter(is.na(US))  # 39
d2c <- read_xlsx(path = "C:/Users/rees/Documents/R/Projects/CLIENTS/LFExecDirs/US Law Firms/d2cEleven.xlsx")  # 5780 on 11/12
funModeling::v_compare(d2c$Firm, law360$Firm)[2]
View(choro)
unique(choro$State)
# I removed two duplicates" Schwabe Wiliams and LaChapelle
choro <- read_xlsx(path = "C:/Users/rees/Documents/R/Projects/CLIENTS/COO Comp 2023/comboReportFinal.xlsx")
# Remove rows with "CD" in the "State" variable
choro_clean <- subset(choro, !grepl("CD", State))
choro_clean <- subset(choro_clean, !grepl("Brisbane", State))
# Get the latitude and longitude data for US states
us_states <- map_data("state")
# Create a mapping from lowercase state names to two-letter abbreviations
state_mapping <- setNames(state.abb, tolower(state.name))
us_states$State <- state_mapping[us_states$region]  # 15537 obs of 4 variables
choro_clean <- left_join(choro_clean[   , 1:16], us_states) # 102003
ggplot(choro_clean, aes(long, lat, group = group, fill = State)) +
geom_polygon(color = "white") +
scale_fill_viridis_b(breaks = c(15, 20, 25, 30, 35),
na.value = "grey") +
labs(fill = "",
title = "Distribution of COO Largest City's State",
na.value = "No data") +
theme_map() +
scale_alpha_manual(values = 1) +
guides(
fill = guide_colorsteps(order = 1),
alpha = guide_legend(order = 2, override.aes = list(fill = "grey")))
ggplot(choro_clean, aes(long, lat, group = group, fill = State)) +
geom_polygon(color = "white")
ggplot(choro_clean, aes(long, lat, group = group, fill = State)) +
geom_polygon(color = "white") +
scale_fill_viridis_b(breaks = c(15, 20, 25, 30, 35),
na.value = "grey")
ggplot(choro_clean, aes(long, lat, group = group, fill = State)) +
geom_polygon(color = "white") +
scale_fill_viridis_b(breaks = c(1, 5, 10, 15, 20),
na.value = "grey")
ggplot(choro_clean, aes(long, lat, group = group, fill = State)) +
geom_polygon(color = "white") +
scale_fill_viridis_b(na.value = "grey")
ggplot(choro_clean, aes(long, lat, group = group, fill = State)) +
geom_polygon(color = "white") +
# scale_fill_viridis_b(na.value = "grey") +
labs(fill = "",
title = "Distribution of COO Largest City's State",
na.value = "No data") +
theme_map() +
scale_alpha_manual(values = 1) +
guides(
fill = guide_colorsteps(order = 1),
alpha = guide_legend(order = 2, override.aes = list(fill = "grey")))
ggplot(choro_clean, aes(long, lat, group = group, fill = State)) +
geom_polygon(color = "white") +
# scale_fill_viridis_b(na.value = "grey") +
labs(fill = "",
title = "Distribution of COO Largest City's State",
na.value = "No data") +
theme_map()
ggplot(choro_clean, aes(long, lat, group = group, fill = State)) +
geom_polygon(color = "white") +
# scale_fill_viridis_b(na.value = "grey") +
labs(fill = "",
title = "Distribution of COO Largest City's State",
na.value = "No data") +
theme_map() +
scale_alpha_manual(values = 1)
ggplot(choro_clean, aes(long, lat, group = group, fill = State)) +
geom_polygon(color = "white") +
# scale_fill_viridis_b(na.value = "grey") +
labs(fill = "",
title = "Distribution of COO Largest City's State",
na.value = "No data") +
theme_map() +
scale_alpha_manual(values = 1) +
guides(
fill = guide_colorsteps(order = 1),
alpha = guide_legend(order = 2, override.aes = list(fill = "grey")))
ggplot(choro_clean, aes(x = long, y = lat, group = group)) +
geom_polygon(, fill = State, color = "white") +
# scale_fill_viridis_b(na.value = "grey") +
labs(fill = "",
title = "Distribution of COO Largest City's State",
na.value = "No data") +
theme_map() +
coord_map() +
scale_alpha_manual(values = 1)
ggplot(choro_clean, aes(x = long, y = lat, group = group)) +
geom_polygon(fill = choro_clean$State, color = "white") +
# scale_fill_viridis_b(na.value = "grey") +
labs(fill = "",
title = "Distribution of COO Largest City's State",
na.value = "No data") +
theme_map() +
coord_map() +
scale_alpha_manual(values = 1)
ggplot(choro_clean, aes(x = long, y = lat, group = group, fill = State)) +
geom_polygon(color = "white") +
# scale_fill_viridis_b(na.value = "grey") +
labs(fill = "",
title = "Distribution of COO Largest City's State",
na.value = "No data") +
theme_map() +
coord_map() +
scale_alpha_manual(values = 1)
ggplot(choro_clean, aes(x = long, y = lat, group = group, fill = State)) +
geom_polygon(color = "grey30") +
# scale_fill_viridis_b(na.value = "grey") +
labs(fill = "",
title = "Distribution of COO Largest City's State",
na.value = "No data") +
theme_map() +
coord_map() +
scale_alpha_manual(values = 1)
stop_server()
serve_site()
blogdown:::new_post_addin()
knitr::include_graphics("C:/Users/rees/Documents/R/Projects/LAWYER Hornbooks/5Surveys/SavSurvBlog/SurveyBlog/static/media/AboveTheLawSelect3.png")
blogdown:::new_post_addin()
blogdown:::new_post_addin()
knitr::opts_chunk$set(echo = FALSE, warning=FALSE, message = FALSE)
library(tidyverse)  # frequently used packages that follow a similar coding approach
library(blogdown)
library(knitr)
library(funModeling) # to compare vectors against each other, such as URLs of posts
library(ggthemes) # to include the theme_tufte them in plots
library(lubridate) # to deal with date data, such as the date a post is published
library(ggrepel) # to spread points or text so that they do not overlap on a plot
library(readxl) # to read in the underlying Excel data
library(tidytext) # text-mining functions that help analyse the content of posts
library(writexl)
library(kableExtra)
library(tidyverse)  # frequently used packages that follow a similar coding approach
library(blogdown)
library(knitr)
library(funModeling) # to compare vectors against each other, such as URLs of posts
library(ggthemes) # to include the theme_tufte them in plots
library(lubridate) # to deal with date data, such as the date a post is published
library(ggrepel) # to spread points or text so that they do not overlap on a plot
library(readxl) # to read in the underlying Excel data
library(tidytext) # text-mining functions that help analyse the content of posts
library(writexl)
library(kableExtra)
site_serve()
serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
